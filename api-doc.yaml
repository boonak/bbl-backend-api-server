openapi: 3.0.0
info:
  title: BBL Backend API Server
  description: API for handling users and posts.
  version: 1.0.0
servers:
  - url: http://localhost:3000

paths:
  /profile:
    get:
      summary: Get user profile
      responses:
        '200':
          description: Successful response with user profile data
        '302':
          description: Redirect to login if not authenticated

  /users:
    get:
      summary: List all users
      responses:
        '200':
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '302':
          description: Redirect to login if not authenticated

    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    suite:
                      type: string
                    city:
                      type: string
                    zipcode:
                      type: string
                    geo:
                      type: object
                      properties:
                        lat:
                          type: string
                        lng:
                          type: string
                phone:
                  type: string
                website:
                  type: string
                company:
                  type: object
                  properties:
                    name:
                      type: string
                    catchPhrase:
                      type: string
                    bs:
                      type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        '302':
          description: Redirect to login if not authenticated

  /users/{id}:
    get:
      summary: Get a single user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of a specific user
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        '302':
          description: Redirect to login if not authenticated

    put:
      summary: Update a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    suite:
                      type: string
                    city:
                      type: string
                    zipcode:
                      type: string
                    geo:
                      type: object
                      properties:
                        lat:
                          type: string
                        lng:
                          type: string
                phone:
                  type: string
                website:
                  type: string
                company:
                  type: object
                  properties:
                    name:
                      type: string
                    catchPhrase:
                      type: string
                    bs:
                      type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        '302':
          description: Redirect to login if not authenticated

    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '302':
          description: Redirect to login if not authenticated

  /posts:
    get:
      summary: List all posts
      responses:
        '200':
          description: A JSON array of post objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '302':
          description: Redirect to login if not authenticated

    post:
      summary: Create a post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                id:
                  type: integer
                title:
                  type: string
                body:
                  type: string
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Post'
        '302':
          description: Redirect to login if not authenticated

  /posts/by-user:
    get:
      summary: Get posts by a specific user
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user for which to retrieve posts
      responses:
        '200':
          description: A JSON array of post objects for the specified user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '302':
          description: Redirect to login if not authenticated

  /posts/{id}:
    get:
      summary: Get a single post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of a specific post
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Post'
        '302':
          description: Redirect to login if not authenticated

    put:
      summary: Update a post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                title:
                  type: string
                body:
                  type: string
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Post'
        '302':
          description: Redirect to login if not authenticated

    delete:
      summary: Delete a post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Post deleted successfully
        '302':
          description: Redirect to login if not authenticated

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        email:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            suite:
              type: string
            city:
              type: string
            zipcode:
              type: string
            geo:
              type: object
              properties:
                lat:
                  type: string
                lng:
                  type: string
        phone:
          type: string
        website:
          type: string
        company:
          type: object
          properties:
            name:
              type: string
            catchPhrase:
              type: string
            bs:
              type: string

    Post:
      type: object
      properties:
        userId:
          type: integer
        id:
          type: integer
        title:
          type: string
        body:
          type: string
